{"ast":null,"code":"import { useRef } from 'react';\nlet idCount = 0;\n\nfunction uniqueId(prefix) {\n  return '' + ((prefix == null ? '' : prefix) + ++idCount);\n}\n\nexport function notify(handler, args) {\n  // eslint-disable-next-line prefer-spread\n  if (handler) handler.apply(null, args);\n}\nexport const useInstanceId = (otherId, suffix = '') => {\n  const id = useRef();\n  if (!id.current) id.current = uniqueId('rw_');\n  return (otherId || id.current) + suffix;\n};\n/**\n * Allows for defering popup rendering untill the widget is focused,\n * or has been opened (in order to not remove it suddenly on close)\n */\n\nexport function useFirstFocusedRender(focused, open) {\n  const ref = useRef(false);\n  return ref.current || (focused || !!open) && (ref.current = true);\n}","map":{"version":3,"sources":["C:/Users/Kainar_malay/Desktop/git_partfolio/kainar_present/first_react/node_modules/react-widgets/esm/WidgetHelpers.js"],"names":["useRef","idCount","uniqueId","prefix","notify","handler","args","apply","useInstanceId","otherId","suffix","id","current","useFirstFocusedRender","focused","open","ref"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,IAAIC,OAAO,GAAG,CAAd;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,SAAO,MAAM,CAACA,MAAM,IAAI,IAAV,GAAiB,EAAjB,GAAsBA,MAAvB,IAAiC,EAAEF,OAAzC,CAAP;AACD;;AAED,OAAO,SAASG,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,EAA+B;AACpC;AACA,MAAID,OAAJ,EAAaA,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBD,IAApB;AACd;AACD,OAAO,MAAME,aAAa,GAAG,CAACC,OAAD,EAAUC,MAAM,GAAG,EAAnB,KAA0B;AACrD,QAAMC,EAAE,GAAGX,MAAM,EAAjB;AACA,MAAI,CAACW,EAAE,CAACC,OAAR,EAAiBD,EAAE,CAACC,OAAH,GAAaV,QAAQ,CAAC,KAAD,CAArB;AACjB,SAAO,CAACO,OAAO,IAAIE,EAAE,CAACC,OAAf,IAA0BF,MAAjC;AACD,CAJM;AAKP;;;;;AAKA,OAAO,SAASG,qBAAT,CAA+BC,OAA/B,EAAwCC,IAAxC,EAA8C;AACnD,QAAMC,GAAG,GAAGhB,MAAM,CAAC,KAAD,CAAlB;AACA,SAAOgB,GAAG,CAACJ,OAAJ,IAAe,CAACE,OAAO,IAAI,CAAC,CAACC,IAAd,MAAwBC,GAAG,CAACJ,OAAJ,GAAc,IAAtC,CAAtB;AACD","sourcesContent":["import { useRef } from 'react';\nlet idCount = 0;\n\nfunction uniqueId(prefix) {\n  return '' + ((prefix == null ? '' : prefix) + ++idCount);\n}\n\nexport function notify(handler, args) {\n  // eslint-disable-next-line prefer-spread\n  if (handler) handler.apply(null, args);\n}\nexport const useInstanceId = (otherId, suffix = '') => {\n  const id = useRef();\n  if (!id.current) id.current = uniqueId('rw_');\n  return (otherId || id.current) + suffix;\n};\n/**\n * Allows for defering popup rendering untill the widget is focused,\n * or has been opened (in order to not remove it suddenly on close)\n */\n\nexport function useFirstFocusedRender(focused, open) {\n  const ref = useRef(false);\n  return ref.current || (focused || !!open) && (ref.current = true);\n}"]},"metadata":{},"sourceType":"module"}