{"ast":null,"code":"import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\n\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n    isEqual: isEqualOrOptions\n  } : isEqualOrOptions,\n      isEqual = _ref.isEqual,\n      _ref$effectHook = _ref.effectHook,\n      effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\n\nexport default useCustomEffect;","map":{"version":3,"sources":["C:/Users/Kainar_malay/Desktop/git_partfolio/kainar_present/first_react/node_modules/react-widgets/node_modules/@restart/hooks/esm/useCustomEffect.js"],"names":["useRef","useEffect","useDebugValue","useMounted","useCustomEffect","effect","dependencies","isEqualOrOptions","isMounted","_ref","isEqual","_ref$effectHook","effectHook","dependenciesRef","current","cleanupRef","cleanup"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,YAAjC,EAA+CC,gBAA/C,EAAiE;AAC/D,MAAIC,SAAS,GAAGL,UAAU,EAA1B;;AAEA,MAAIM,IAAI,GAAG,OAAOF,gBAAP,KAA4B,UAA5B,GAAyC;AAClDG,IAAAA,OAAO,EAAEH;AADyC,GAAzC,GAEPA,gBAFJ;AAAA,MAGIG,OAAO,GAAGD,IAAI,CAACC,OAHnB;AAAA,MAIIC,eAAe,GAAGF,IAAI,CAACG,UAJ3B;AAAA,MAKIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6BV,SAA7B,GAAyCU,eAL1D;;AAOA,MAAIE,eAAe,GAAGb,MAAM,EAA5B;AACAa,EAAAA,eAAe,CAACC,OAAhB,GAA0BR,YAA1B;AACA,MAAIS,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACAY,EAAAA,UAAU,CAAC,YAAY;AACrB;AACA;AACA;AACA,QAAIG,UAAU,CAACD,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,UAAIE,OAAO,GAAGX,MAAM,EAApB;;AAEAU,MAAAA,UAAU,CAACD,OAAX,GAAqB,YAAY;AAC/B,YAAIN,SAAS,MAAME,OAAO,CAACG,eAAe,CAACC,OAAjB,EAA0BR,YAA1B,CAA1B,EAAmE;AACjE;AACD;;AAEDS,QAAAA,UAAU,CAACD,OAAX,GAAqB,IAArB;AACA,YAAIE,OAAJ,EAAaA,OAAO;AACrB,OAPD;AAQD;;AAED,WAAOD,UAAU,CAACD,OAAlB;AACD,GAlBS,CAAV;AAmBAZ,EAAAA,aAAa,CAACG,MAAD,CAAb;AACD;;AAED,eAAeD,eAAf","sourcesContent":["import { useRef, useEffect, useDebugValue } from 'react';\nimport useMounted from './useMounted';\n\nfunction useCustomEffect(effect, dependencies, isEqualOrOptions) {\n  var isMounted = useMounted();\n\n  var _ref = typeof isEqualOrOptions === 'function' ? {\n    isEqual: isEqualOrOptions\n  } : isEqualOrOptions,\n      isEqual = _ref.isEqual,\n      _ref$effectHook = _ref.effectHook,\n      effectHook = _ref$effectHook === void 0 ? useEffect : _ref$effectHook;\n\n  var dependenciesRef = useRef();\n  dependenciesRef.current = dependencies;\n  var cleanupRef = useRef(null);\n  effectHook(function () {\n    // If the ref the is `null` it's either the first effect or the last effect\n    // ran and was cleared, meaning _this_ update should run, b/c the equality\n    // check failed on in the cleanup of the last effect.\n    if (cleanupRef.current === null) {\n      var cleanup = effect();\n\n      cleanupRef.current = function () {\n        if (isMounted() && isEqual(dependenciesRef.current, dependencies)) {\n          return;\n        }\n\n        cleanupRef.current = null;\n        if (cleanup) cleanup();\n      };\n    }\n\n    return cleanupRef.current;\n  });\n  useDebugValue(effect);\n}\n\nexport default useCustomEffect;"]},"metadata":{},"sourceType":"module"}