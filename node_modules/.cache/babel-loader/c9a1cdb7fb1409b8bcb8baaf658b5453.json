{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport cn from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { caretDown } from './Icon';\nimport Input from './Input';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport InputAddon from './InputAddon';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useMessagesWithDefaults } from './messages';\nimport { useActiveDescendant } from './A11y';\nimport * as CustomPropTypes from './PropTypes';\nimport { useAccessors } from './Accessors';\nimport { useFilteredData } from './Filter';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\n\nfunction indexOf(data, searchTerm, text) {\n  if (!searchTerm.trim()) return -1;\n\n  for (let idx = 0; idx < data.length; idx++) if (text(data[idx]).toLowerCase() === searchTerm) return idx;\n\n  return -1;\n}\n\nlet propTypes = {\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: PropTypes.elementType,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  name: PropTypes.string,\n\n  /** Do not show the auto complete list when it returns no results. */\n  hideEmptyPopup: PropTypes.bool,\n\n  /** Hide the combobox dropdown indicator. */\n  hideCaret: PropTypes.bool,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    openCombobox: CustomPropTypes.message,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message\n  })\n};\n/**\n * ---\n * shortcuts:\n *   - { key: alt + down arrow, label: open combobox }\n *   - { key: alt + up arrow, label: close combobox }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * Select an item from the list, or input a custom value. The Combobox can also make suggestions as you type.\n\n * @public\n */\n\nconst ComboboxImpl = /*#__PURE__*/React.forwardRef(function Combobox(_ref, outerRef) {\n  let {\n    id,\n    className,\n    containerClassName,\n    placeholder,\n    autoFocus,\n    textField,\n    dataKey,\n    autoSelectMatches,\n    focusFirstItem = false,\n    value,\n    defaultValue = '',\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    filter = true,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    hideCaret,\n    hideEmptyPopup,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    onSelect,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    inputProps,\n    listProps,\n    groupBy,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, [\"id\", \"className\", \"containerClassName\", \"placeholder\", \"autoFocus\", \"textField\", \"dataKey\", \"autoSelectMatches\", \"focusFirstItem\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"filter\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"hideCaret\", \"hideEmptyPopup\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"onSelect\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"inputProps\", \"listProps\", \"groupBy\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"]);\n\n  let [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const listRef = useRef(null);\n  const [suggestion, setSuggestion] = useState(null);\n  const shouldFilter = useRef(false);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const messages = useMessagesWithDefaults(userMessages);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true;\n  const isReadOnly = !!readOnly;\n  const data = useFilteredData(rawData, filter, shouldFilter.current ? accessors.text(currentValue) : void 0, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (!focused) {\n        shouldFilter.current = false;\n        toggle.close();\n        setSuggestion(null);\n        list.focus(undefined);\n      } else {\n        focus({\n          preventScroll: true\n        });\n      }\n    }\n\n  });\n  useActiveDescendant(ref, activeId, currentOpen, [list.getFocused()]);\n  /**\n   * Handlers\n   */\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n  };\n\n  const handleSelect = (data, originalEvent) => {\n    toggle.close();\n    shouldFilter.current = false;\n    setSuggestion(null);\n    notify(onSelect, [data, {\n      originalEvent\n    }]);\n    change(data, originalEvent, true);\n    focus({\n      preventScroll: true\n    });\n  };\n\n  const handleInputKeyDown = ({\n    key\n  }) => {\n    if (key === 'Backspace' || key === 'Delete') {\n      list.focus(null);\n    }\n  };\n\n  const handleInputChange = event => {\n    let idx = autoSelectMatches ? indexOf(rawData, event.target.value.toLowerCase(), accessors.text) : -1;\n    shouldFilter.current = true;\n    setSuggestion(null);\n    const nextValue = idx === -1 ? event.target.value : rawData[idx];\n    change(nextValue, event);\n    if (!nextValue) toggle.close();else toggle.open();\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly) return;\n    let {\n      key,\n      altKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    const select = item => item != null && handleSelect(item, e);\n\n    const setFocused = el => {\n      if (!el) return;\n      setSuggestion(list.toDataItem(el));\n      list.focus(el);\n    };\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.first());\n    } else if (key === 'Escape' && currentOpen) {\n      e.preventDefault();\n      setSuggestion(null);\n      toggle.close();\n    } else if (key === 'Enter' && currentOpen) {\n      e.preventDefault();\n      select(list.getFocused());\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (currentOpen) {\n        setFocused(list.next());\n      } else {\n        return toggle.open();\n      }\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return toggle.close();\n\n      if (currentOpen) {\n        setFocused(list.prev());\n      }\n    }\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus(opts) {\n    if (inputRef.current) inputRef.current.focus(opts);\n  }\n\n  function change(nextValue, originalEvent, selected = false) {\n    handleChange(nextValue, {\n      lastValue: currentValue,\n      originalEvent,\n      source: selected ? 'listbox' : 'input'\n    });\n  }\n  /**\n   * Rendering\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let inputValue = accessors.text(suggestion || valueItem);\n  let completeType = filter ? 'list' : 'none';\n  let popupOpen = currentOpen && (!hideEmptyPopup || !!data.length);\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    ref: ref,\n    open: currentOpen,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    className: cn(className, 'rw-combobox')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: containerClassName,\n    hideCaret: hideCaret\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, inputProps, {\n    role: \"combobox\",\n    name: name,\n    id: inputId,\n    className: cn( // @ts-ignore\n    inputProps && inputProps.className, 'rw-widget-input rw-combobox-input'),\n    autoFocus: autoFocus,\n    tabIndex: tabIndex,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    \"aria-busy\": !!busy,\n    \"aria-owns\": listId,\n    \"aria-autocomplete\": completeType,\n    \"aria-expanded\": currentOpen,\n    \"aria-haspopup\": true,\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    ref: inputRef\n  })), !hideCaret && /*#__PURE__*/React.createElement(InputAddon, {\n    busy: busy,\n    icon: selectIcon,\n    spinner: busySpinner,\n    onClick: handleClick,\n    disabled: !!isDisabled || isReadOnly // FIXME\n    ,\n    label: messages.openCombobox()\n  })), /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, {\n    dropUp: dropUp,\n    open: popupOpen,\n    transition: popupTransition,\n    onEntering: () => listRef.current.scrollIntoView()\n  }, /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    tabIndex: -1,\n    data: data,\n    groupBy: groupBy,\n    disabled: disabled,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    searchTerm: valueItem && accessors.text(valueItem) || '',\n    \"aria-hidden\": !popupOpen,\n    \"aria-labelledby\": inputId,\n    \"aria-live\": popupOpen ? 'polite' : void 0,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? messages.emptyFilter : messages.emptyList\n    }\n  })))));\n});\nComboboxImpl.displayName = 'Combobox';\nComboboxImpl.propTypes = propTypes;\nexport default ComboboxImpl;","map":{"version":3,"sources":["C:/Users/Kainar_malay/Desktop/git_partfolio/kainar_present/first_react/node_modules/react-widgets/esm/Combobox.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","cn","PropTypes","React","useImperativeHandle","useMemo","useRef","useState","useUncontrolledProp","caretDown","Input","List","FocusListContext","useFocusList","BasePopup","InputAddon","Widget","WidgetPicker","useMessagesWithDefaults","useActiveDescendant","CustomPropTypes","useAccessors","useFilteredData","useDropdownToggle","useFocusManager","notify","useFirstFocusedRender","useInstanceId","data","searchTerm","text","trim","idx","toLowerCase","propTypes","value","any","onChange","func","open","bool","onToggle","renderListItem","listComponent","elementType","renderListGroup","groupBy","accessor","array","dataKey","textField","name","string","hideEmptyPopup","hideCaret","onSelect","autoFocus","disabled","acceptsArray","readOnly","busy","selectIcon","node","busySpinner","dropUp","popupTransition","placeholder","containerClassName","inputProps","object","listProps","messages","shape","openCombobox","message","emptyList","emptyFilter","ComboboxImpl","forwardRef","Combobox","_ref","outerRef","id","className","autoSelectMatches","focusFirstItem","defaultValue","defaultOpen","filter","tabIndex","onKeyDown","onBlur","onFocus","optionComponent","ListComponent","popupComponent","Popup","rawData","userMessages","elementProps","currentValue","handleChange","currentOpen","handleOpen","ref","inputRef","listRef","suggestion","setSuggestion","shouldFilter","inputId","listId","activeId","accessors","toggle","isDisabled","isReadOnly","current","selectedItem","list","scope","anchorItem","undefined","focusEvents","focused","didHandle","close","focus","preventScroll","getFocused","handleClick","e","preventDefault","handleSelect","originalEvent","change","handleInputKeyDown","handleInputChange","event","nextValue","handleKeyDown","altKey","shiftKey","defaultPrevented","select","item","setFocused","el","toDataItem","last","first","next","prev","opts","selected","lastValue","shouldRenderPopup","valueItem","findOrSelf","inputValue","completeType","popupOpen","createElement","role","icon","spinner","onClick","label","Provider","context","transition","onEntering","scrollIntoView","renderItem","renderGroup","d","meta","displayName"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { caretDown } from './Icon';\nimport Input from './Input';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport InputAddon from './InputAddon';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useMessagesWithDefaults } from './messages';\nimport { useActiveDescendant } from './A11y';\nimport * as CustomPropTypes from './PropTypes';\nimport { useAccessors } from './Accessors';\nimport { useFilteredData } from './Filter';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\n\nfunction indexOf(data, searchTerm, text) {\n  if (!searchTerm.trim()) return -1;\n\n  for (let idx = 0; idx < data.length; idx++) if (text(data[idx]).toLowerCase() === searchTerm) return idx;\n\n  return -1;\n}\n\nlet propTypes = {\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: PropTypes.elementType,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  name: PropTypes.string,\n\n  /** Do not show the auto complete list when it returns no results. */\n  hideEmptyPopup: PropTypes.bool,\n\n  /** Hide the combobox dropdown indicator. */\n  hideCaret: PropTypes.bool,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    openCombobox: CustomPropTypes.message,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message\n  })\n};\n\n/**\n * ---\n * shortcuts:\n *   - { key: alt + down arrow, label: open combobox }\n *   - { key: alt + up arrow, label: close combobox }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * Select an item from the list, or input a custom value. The Combobox can also make suggestions as you type.\n\n * @public\n */\nconst ComboboxImpl = /*#__PURE__*/React.forwardRef(function Combobox(_ref, outerRef) {\n  let {\n    id,\n    className,\n    containerClassName,\n    placeholder,\n    autoFocus,\n    textField,\n    dataKey,\n    autoSelectMatches,\n    focusFirstItem = false,\n    value,\n    defaultValue = '',\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    filter = true,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    hideCaret,\n    hideEmptyPopup,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    onSelect,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    inputProps,\n    listProps,\n    groupBy,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, [\"id\", \"className\", \"containerClassName\", \"placeholder\", \"autoFocus\", \"textField\", \"dataKey\", \"autoSelectMatches\", \"focusFirstItem\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"filter\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"hideCaret\", \"hideEmptyPopup\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"onSelect\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"inputProps\", \"listProps\", \"groupBy\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"]);\n\n  let [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const listRef = useRef(null);\n  const [suggestion, setSuggestion] = useState(null);\n  const shouldFilter = useRef(false);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const messages = useMessagesWithDefaults(userMessages);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true;\n  const isReadOnly = !!readOnly;\n  const data = useFilteredData(rawData, filter, shouldFilter.current ? accessors.text(currentValue) : void 0, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (!focused) {\n        shouldFilter.current = false;\n        toggle.close();\n        setSuggestion(null);\n        list.focus(undefined);\n      } else {\n        focus({\n          preventScroll: true\n        });\n      }\n    }\n\n  });\n  useActiveDescendant(ref, activeId, currentOpen, [list.getFocused()]);\n  /**\n   * Handlers\n   */\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n  };\n\n  const handleSelect = (data, originalEvent) => {\n    toggle.close();\n    shouldFilter.current = false;\n    setSuggestion(null);\n    notify(onSelect, [data, {\n      originalEvent\n    }]);\n    change(data, originalEvent, true);\n    focus({\n      preventScroll: true\n    });\n  };\n\n  const handleInputKeyDown = ({\n    key\n  }) => {\n    if (key === 'Backspace' || key === 'Delete') {\n      list.focus(null);\n    }\n  };\n\n  const handleInputChange = event => {\n    let idx = autoSelectMatches ? indexOf(rawData, event.target.value.toLowerCase(), accessors.text) : -1;\n    shouldFilter.current = true;\n    setSuggestion(null);\n    const nextValue = idx === -1 ? event.target.value : rawData[idx];\n    change(nextValue, event);\n    if (!nextValue) toggle.close();else toggle.open();\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly) return;\n    let {\n      key,\n      altKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    const select = item => item != null && handleSelect(item, e);\n\n    const setFocused = el => {\n      if (!el) return;\n      setSuggestion(list.toDataItem(el));\n      list.focus(el);\n    };\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.first());\n    } else if (key === 'Escape' && currentOpen) {\n      e.preventDefault();\n      setSuggestion(null);\n      toggle.close();\n    } else if (key === 'Enter' && currentOpen) {\n      e.preventDefault();\n      select(list.getFocused());\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (currentOpen) {\n        setFocused(list.next());\n      } else {\n        return toggle.open();\n      }\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return toggle.close();\n\n      if (currentOpen) {\n        setFocused(list.prev());\n      }\n    }\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus(opts) {\n    if (inputRef.current) inputRef.current.focus(opts);\n  }\n\n  function change(nextValue, originalEvent, selected = false) {\n    handleChange(nextValue, {\n      lastValue: currentValue,\n      originalEvent,\n      source: selected ? 'listbox' : 'input'\n    });\n  }\n  /**\n   * Rendering\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let inputValue = accessors.text(suggestion || valueItem);\n  let completeType = filter ? 'list' : 'none';\n  let popupOpen = currentOpen && (!hideEmptyPopup || !!data.length);\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    ref: ref,\n    open: currentOpen,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    className: cn(className, 'rw-combobox')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: containerClassName,\n    hideCaret: hideCaret\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, inputProps, {\n    role: \"combobox\",\n    name: name,\n    id: inputId,\n    className: cn( // @ts-ignore\n    inputProps && inputProps.className, 'rw-widget-input rw-combobox-input'),\n    autoFocus: autoFocus,\n    tabIndex: tabIndex,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    \"aria-busy\": !!busy,\n    \"aria-owns\": listId,\n    \"aria-autocomplete\": completeType,\n    \"aria-expanded\": currentOpen,\n    \"aria-haspopup\": true,\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    ref: inputRef\n  })), !hideCaret && /*#__PURE__*/React.createElement(InputAddon, {\n    busy: busy,\n    icon: selectIcon,\n    spinner: busySpinner,\n    onClick: handleClick,\n    disabled: !!isDisabled || isReadOnly // FIXME\n    ,\n    label: messages.openCombobox()\n  })), /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, {\n    dropUp: dropUp,\n    open: popupOpen,\n    transition: popupTransition,\n    onEntering: () => listRef.current.scrollIntoView()\n  }, /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    tabIndex: -1,\n    data: data,\n    groupBy: groupBy,\n    disabled: disabled,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    searchTerm: valueItem && accessors.text(valueItem) || '',\n    \"aria-hidden\": !popupOpen,\n    \"aria-labelledby\": inputId,\n    \"aria-live\": popupOpen ? 'polite' : void 0,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? messages.emptyFilter : messages.emptyList\n    }\n  })))));\n});\nComboboxImpl.displayName = 'Combobox';\nComboboxImpl.propTypes = propTypes;\nexport default ComboboxImpl;"]},"metadata":{},"sourceType":"module"}