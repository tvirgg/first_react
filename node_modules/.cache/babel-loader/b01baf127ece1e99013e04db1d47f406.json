{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kainar_malay\\\\Desktop\\\\git_partfolio\\\\kainar_present\\\\first_react\\\\src\\\\components\\\\profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { connect } from 'react-redux';\nimport { getStatus, setProfilePage, updateStatus, savePhoto, saveProfile, SaveProfile } from \"../../redux/state/ProfileData-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.myuserid;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.setProfilePage(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Profile, Object.assign({\n      SaveProfile: this.props.SaveProfile,\n      isowner: !this.props.match.params.userId\n    }, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      SavePhoto: this.props.savePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.ProfileData.profile,\n  status: state.ProfileData.status,\n  myuserid: state.AuthData.id,\n  isAuth: state.AuthData.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  setProfilePage,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  SaveProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/Kainar_malay/Desktop/git_partfolio/kainar_present/first_react/src/components/profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","setProfilePage","updateStatus","savePhoto","saveProfile","SaveProfile","withRouter","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","myuserid","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","ProfileData","AuthData","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,sCAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,SADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,WANJ,QAOO,uCAPP;AAQA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA8C;AAC1CC,EAAAA,cAAc,GAAG;AACjB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACbA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,QAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACb,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACC;AACA;;AACD,SAAKL,KAAL,CAAWX,cAAX,CAA0BU,MAA1B;AACA,SAAKC,KAAL,CAAWZ,SAAX,CAAqBW,MAArB;AACH;;AAEGO,EAAAA,iBAAiB,GAAI;AACjB,SAAKR,cAAL;AACH;;AACDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCS,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAoE;AAChE,WAAKD,cAAL;AACH;AAEJ;;AAEDa,EAAAA,MAAM,GAAG;AAEL,wBAAO,uDACH,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWP,WAAjC;AAA8C,MAAA,OAAO,EAAE,CAAC,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH;AAAhF,OAA4F,KAAKC,KAAjG;AAAyG,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OAA7H;AAAsI,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAAzJ;AAAkK,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWV,YAA3L;AAAyM,MAAA,SAAS,EAAE,KAAKU,KAAL,CAAWT,SAA/N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,CAAP;AAGH;;AA5ByC;;AA8B9C,IAAIuB,eAAe,GAAIC,KAAD,KAAW;AAC7BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADE;AAE7BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFG;AAG7BV,EAAAA,QAAQ,EAAEY,KAAK,CAACE,QAAN,CAAeC,EAHI;AAI7BC,EAAAA,MAAM,EAAEJ,KAAK,CAACE,QAAN,CAAeE;AAJM,CAAX,CAAtB;;AASA,eAAexB,OAAO,CAClBR,OAAO,CAAC2B,eAAD,EAAkB;AAACzB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA,YAA5B;AAA0CC,EAAAA,SAA1C;AAAqDE,EAAAA;AAArD,CAAlB,CADW,EAElBC,UAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from 'react-redux';\nimport {\n    getStatus,\n    setProfilePage,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n    SaveProfile\n} from \"../../redux/state/ProfileData-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component{\n    refreshProfile (){\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n    userId = this.props.myuserid;\n    if (!userId) {\n    this.props.history.push(\"/login\");\n    }\n    }\n    this.props.setProfilePage(userId);\n    this.props.getStatus(userId);\n}\n\n    componentDidMount()  {\n        this.refreshProfile();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId){\n            this.refreshProfile();\n        }\n\n    }\n\n    render() {\n\n        return <>\n            <Profile SaveProfile={this.props.SaveProfile} isowner={!this.props.match.params.userId} {...this.props}  profile={this.props.profile} status={this.props.status}  updateStatus={this.props.updateStatus} SavePhoto={this.props.savePhoto}/>\n            </>\n    }\n}\nlet mapStateToProps = (state) =>({\n    profile: state.ProfileData.profile,\n    status: state.ProfileData.status,\n    myuserid: state.AuthData.id,\n    isAuth: state.AuthData.isAuth\n});\n\n\n\nexport default compose(\n    connect(mapStateToProps, {setProfilePage, getStatus, updateStatus, savePhoto, SaveProfile}),\n    withRouter\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}